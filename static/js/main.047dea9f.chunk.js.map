{"version":3,"sources":["logo.png","components/WeatherCard/Location.js","components/WeatherCard/Icon.js","components/WeatherCard/Condition.js","components/WeatherCard/component.js","components/WeatherCard/WeatherEngine.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Location","country","city","getWheather","useState","query","setQuery","inputMode","setInputMode","inputRef","useRef","useEffect","current","focus","div","initial","opacity","animate","FormElement","onSubmit","e","preventDefault","InputField","ref","type","required","value","onChange","target","SearchButton","CancelButton","onClick","City","Country","Container","styled","h1","h3","form","input","button","span","Icon","icon","img","src","alt","Condition","temp","condition","theme","realStyle","text","State","group","transitionDelay","transitionTimingFunction","transform","number","height","fontFamily","reel","display","alignItems","overflowY","fontSize","fontWeight","lineHeight","WeatherCard","highColor","lowColor","bg","Math","abs","Card","scale","WeatherEngine","location","weather","setWeather","loading","setLoading","axios","get","then","res","status","data","temp_c","name","style","width","justifyContent","className","App","Navbar","variant","Brand","href","Logo","Jumbotron","Row","Col","fluid","md","title","border","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,2mDCK3C,IA4CeC,EA5CE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EACzBC,mBAAS,IADgB,mBAC5CC,EAD4C,KACrCC,EADqC,OAEjBF,oBAAS,GAFQ,mBAE5CG,EAF4C,KAEjCC,EAFiC,KAG7CC,EAAWC,iBAAO,IAQxB,OANAC,qBAAU,WACJJ,GACFE,EAASG,QAAQC,UAElB,CAACN,IAEAA,EAEA,kBAAC,EAAD,KACE,kBAAC,IAAOO,IAAR,CAAYC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,IACvD,kBAACE,EAAD,CACEC,SAAU,SAACC,GACTA,EAAEC,iBACFlB,EAAYE,KAGd,kBAACiB,EAAD,CACEC,IAAKd,EACLe,KAAK,OACLC,UAAQ,EACRC,MAAOrB,EACPsB,SAAU,SAACP,GAAD,OAAOd,EAASc,EAAEQ,OAAOF,UAErC,kBAACG,EAAD,CAAcL,KAAK,UAAnB,UACA,kBAACM,EAAD,CAAcC,QAAS,kBAAMvB,GAAa,KAA1C,QAQR,kBAAC,EAAD,KACE,kBAACwB,EAAD,CAAMD,QAAS,kBAAMvB,GAAa,KAAQN,GAC1C,kBAAC+B,EAAD,KAAUhC,KAOViC,EAAYC,IAAOrB,IAAV,KAITkB,EAAOG,IAAOC,GAAV,KAUJH,EAAUE,IAAOE,GAAV,KAKPnB,EAAciB,IAAOG,KAAV,KAMXhB,EAAaa,IAAOI,MAAV,KAUVV,EAAeM,IAAOK,OAAV,KAQZV,EAAeK,IAAOM,KAAV,K,0FC3FlB,IAOeC,EAPF,YAAe,IAAZC,EAAW,EAAXA,KACRD,EAAOP,IAAOS,IAAV,KAGV,OAAO,kBAACF,EAAD,CAAMG,IAAKF,EAAMG,IAAI,kB,iJCH9B,IASeC,EATG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACzB,OACE,oCACE,kBAAC,IAAD,CAAMC,MAAOC,EAAWC,KAAI,UAAKJ,KACjC,kBAACK,EAAD,KAAQJ,KAORI,EAAQlB,IAAOE,GAAV,KAKLc,EAAY,CAChBG,MAAO,CACLC,gBAAiB,MACjBC,yBAA0B,cAC1BC,UAAW,mBAEbC,OAAQ,CACNC,OAAQ,MACRC,WAAY,yBAEdC,KAAM,CACJF,OAAQ,MACRG,QAAS,OACTC,WAAY,WACZC,UAAW,SACXC,SAAU,OACVC,WAAY,MACZC,WAAY,W,iRC7BhB,IA2CeC,EA3CK,SAAC,GAA2D,IAAzDpB,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,UAAWhD,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,KAAMyC,EAAwB,EAAxBA,KAAMxC,EAAkB,EAAlBA,YACvDkE,EAAY,EACZC,EAAW,EACXC,EAAK,KACLvB,EAAO,IAETsB,GADAD,EAAqC,KAAxB,GAAKrB,EAAO,IAAM,KACR,IACvBuB,EAAE,2DAEYF,EAFZ,kCAGYG,KAAKC,IAAIH,GAHrB,gBAKOtB,GAAQ,KAEjBsB,GADAD,EAAqC,KAAxB,GAAKrB,EAAO,IAAM,KACR,IACvBuB,EAAE,yDAEUF,EAFV,kCAGUG,KAAKC,IAAIH,GAHnB,kBAOJ,IAAMI,EAAOvC,IAAOrB,IAAV,IAEMyD,GAQhB,OACE,kBAAC,IAAOzD,IAAR,CAAYC,QAAS,CAAE4D,MAAO,GAAK1D,QAAS,CAAE0D,MAAO,IACnD,kBAACD,EAAD,KACE,kBAAC,EAAD,CAAUxE,KAAMA,EAAMD,QAASA,EAASE,YAAaA,IACrD,kBAAC,EAAD,CAAMwC,KAAMA,IACZ,kBAAC,EAAD,CAAWK,KAAMA,EAAMC,UAAWA,O,iBCuB3B2B,EA/DO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACRzE,mBAAS,CACrC4C,KAAM,KACN9C,KAAM,KACND,QAAS,KACTgD,UAAW,KACXN,KAAM,OAN8B,mBAC/BmC,EAD+B,KACtBC,EADsB,OAQR3E,oBAAS,GARD,mBAQ/B4E,EAR+B,KAQtBC,EARsB,KAUhC9E,EAAc,SAACD,GACnB+E,GAAW,GACXC,IACGC,IADH,0FAEuFjF,IAEpFkF,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNL,GAAW,GACXF,EAAW,CACT/B,KAAMqC,EAAIE,KAAK3E,QAAQ4E,OACvBtF,KAAMmF,EAAIE,KAAKV,SAASY,KACxBxF,QAASoF,EAAIE,KAAKV,SAAS5E,QAC3BgD,UAAWoC,EAAIE,KAAK3E,QAAQqC,UAAUG,KACtCT,KAAM0C,EAAIE,KAAK3E,QAAQqC,UAAUN,YAU3C,OAJAhC,qBAAU,WACRR,EAAY0E,KACX,CAACA,IAEAG,EAEA,yBACEU,MAAO,CACL5B,QAAS,OACT6B,MAAO,QACPhC,OAAQ,QACRiC,eAAgB,SAChB7B,WAAY,WAGd,kBAAC,IAAD,OAKJ,yBAAK8B,UAAU,OACb,kBAAC,EAAD,CACE7C,KAAM8B,EAAQ9B,KACdC,UAAW6B,EAAQ7B,UACnB/C,KAAM4E,EAAQ5E,KACdD,QAAS6E,EAAQ7E,QACjB0C,KAAMmC,EAAQnC,KACdxC,YAAaA,MCJN2F,MAnDf,WACE,OACE,yBAAKD,UAAU,OACb,kBAACE,EAAA,EAAD,CAAQxB,GAAG,OAAOyB,QAAQ,QACxB,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,SACjB,yBACEpD,IAAI,GACJD,IAAKsD,IACLR,MAAM,KACNhC,OAAO,KACPkC,UAAU,6BACT,IAPL,mBAYF,kBAACO,EAAA,EAAD,KACE,kBAAClE,EAAA,EAAD,KACE,kBAACmE,EAAA,EAAD,CAAKR,UAAU,6BACb,kBAACS,EAAA,EAAD,KACE,kBAAC,EAAD,CAAezB,SAAS,aAE1B,kBAACyB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAezB,SAAS,cAE1B,kBAACyB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAezB,SAAS,WAE1B,kBAACyB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAezB,SAAS,mBAKhC,kBAAC3C,EAAA,EAAD,CAAWqE,OAAK,GACd,kBAACF,EAAA,EAAD,CAAKR,UAAU,8BACb,kBAACS,EAAA,EAAD,CAAKE,GAAG,QACN,uBAAGN,KAAK,8BAA8BO,MAAM,oBAC1C,yBACE5D,IAAI,qDACJC,IAAI,iCACJ4D,OAAO,YCpCHC,QACW,cAA7BC,OAAO/B,SAASgC,UAEe,UAA7BD,OAAO/B,SAASgC,UAEhBD,OAAO/B,SAASgC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlC,MAAK,SAAAmC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.047dea9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ce57e147.png\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Location = ({ country, city, getWheather }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [inputMode, setInputMode] = useState(false);\r\n  const inputRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (inputMode) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputMode]);\r\n\r\n  if (inputMode) {\r\n    return (\r\n      <Container>\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>\r\n          <FormElement\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              getWheather(query);\r\n            }}\r\n          >\r\n            <InputField\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              required\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n            <SearchButton type=\"submit\">Search</SearchButton>\r\n            <CancelButton onClick={() => setInputMode(false)}>X</CancelButton>\r\n          </FormElement>\r\n        </motion.div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <City onClick={() => setInputMode(true)}>{city}</City>\r\n      <Country>{country}</Country>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  height: 60px;\r\n`;\r\nconst City = styled.h1`\r\n  font-size: \"Merriweather\", sans-serif;\r\n  font-size: 1.6rem;\r\n  position: relative;\r\n  cursor: pointer;\r\n  &:hover {\r\n    top: -5px;\r\n  }\r\n`;\r\n\r\nconst Country = styled.h3`\r\n  font-family: \"Fira Sans\", sans-serif;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst FormElement = styled.form`\r\n  display: flex;\r\n  position: relative;\r\n  background: #46618b;\r\n  border-radius: 5px;\r\n`;\r\nconst InputField = styled.input`\r\n  padding: 5px;\r\n  width: 100px;\r\n  background: transparent;\r\n  color: white;\r\n  border: none;\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\nconst SearchButton = styled.button`\r\n  padding: 4px;\r\n  background: #394e70;\r\n  border: none;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  color: white;\r\n`;\r\nconst CancelButton = styled.span`\r\n  position: absolute;\r\n  background: #557fc2;\r\n  top: -10px;\r\n  right: -10px;\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.8rem;\r\n  box-shadow: 1px 0px 2px rgba(0, 0, 0, 0.4);\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Icon = ({ icon }) => {\r\n  const Icon = styled.img`\r\n    width: 40%;\r\n  `;\r\n  return <Icon src={icon} alt=\"Weather Icon\" />;\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Reel from \"react-reel\";\r\n\r\nconst Condition = ({ temp, condition }) => {\r\n  return (\r\n    <>\r\n      <Reel theme={realStyle} text={`${temp}`}></Reel>\r\n      <State>{condition}</State>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Condition;\r\n\r\nconst State = styled.h3`\r\n  font-family: \"Merriweather\", sans-serif;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst realStyle = {\r\n  group: {\r\n    transitionDelay: \"0ms\",\r\n    transitionTimingFunction: \"ease-in-out\",\r\n    transform: \"translate(0, 0)\",\r\n  },\r\n  number: {\r\n    height: \"1em\",\r\n    fontFamily: \"Fira Sans, sans-serif\",\r\n  },\r\n  reel: {\r\n    height: \"1em\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    overflowY: \"hidden\",\r\n    fontSize: \"45px\",\r\n    fontWeight: \"300\",\r\n    lineHeight: \"0.90em\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Location from \"./Location\";\r\nimport Icon from \"./Icon\";\r\nimport Condition from \"./Condition\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst WeatherCard = ({ temp, condition, country, city, icon, getWheather }) => {\r\n  let highColor = 0;\r\n  let lowColor = 0;\r\n  let bg = null;\r\n  if (temp > 12) {\r\n    highColor = (1 - (temp - 12) / 28) * 255;\r\n    lowColor = highColor - 200;\r\n    bg = `linear-gradient(\r\n      to top,\r\n      rgba(255, ${highColor}, 0),\r\n      rgba(255, ${Math.abs(lowColor)}, 0)\r\n    )`;\r\n  } else if (temp <= 12) {\r\n    highColor = (1 - (temp + 20) / 32) * 255;\r\n    lowColor = highColor - 200;\r\n    bg = `linear-gradient(\r\n      to top,\r\n      rgba(0, ${highColor}, 255),\r\n      rgba(0, ${Math.abs(lowColor)}, 255)\r\n    )`;\r\n  }\r\n\r\n  const Card = styled.div`\r\n    margin: 0 auto;\r\n    background: ${bg};\r\n    display: flex;\r\n    padding: 10px;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n  `;\r\n  return (\r\n    <motion.div initial={{ scale: 0 }} animate={{ scale: 1 }}>\r\n      <Card>\r\n        <Location city={city} country={country} getWheather={getWheather} />\r\n        <Icon icon={icon} />\r\n        <Condition temp={temp} condition={condition} />\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport WeatherCard from \"./component\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\nconst WeatherEngine = ({ location }) => {\r\n  const [weather, setWeather] = useState({\r\n    temp: null,\r\n    city: null,\r\n    country: null,\r\n    condition: null,\r\n    icon: null,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getWheather = (city) => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `https://api.weatherapi.com/v1/current.json?key=f4ac401d188e480496270919202505&q=${city}`\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setLoading(false);\r\n          setWeather({\r\n            temp: res.data.current.temp_c,\r\n            city: res.data.location.name,\r\n            country: res.data.location.country,\r\n            condition: res.data.current.condition.text,\r\n            icon: res.data.current.condition.icon,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWheather(location);\r\n  }, [location]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"200px\",\r\n          height: \"240px\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <BounceLoader />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <WeatherCard\r\n        temp={weather.temp}\r\n        condition={weather.condition}\r\n        city={weather.city}\r\n        country={weather.country}\r\n        icon={weather.icon}\r\n        getWheather={getWheather}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherEngine;\r\n","import React from \"react\";\nimport Logo from \"./logo.png\";\n\nimport { Container, Row, Col, Navbar, Jumbotron } from \"react-bootstrap\";\n\nimport WeatherEngine from \"./components/WeatherCard/WeatherEngine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          <img\n            alt=\"\"\n            src={Logo}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{\" \"}\n          React Wheather\n        </Navbar.Brand>\n      </Navbar>\n\n      <Jumbotron>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col>\n              <WeatherEngine location=\"Calicut\" />\n            </Col>\n            <Col>\n              <WeatherEngine location=\"Kalpetta\" />\n            </Col>\n            <Col>\n              <WeatherEngine location=\"Kochi\" />\n            </Col>\n            <Col>\n              <WeatherEngine location=\"Trivandrum\" />\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n      <Container fluid>\n        <Row className=\"justify-content-md-center \">\n          <Col md=\"auto\">\n            <a href=\"https://www.weatherapi.com/\" title=\"Free Weather API\">\n              <img\n                src=\"//cdn.weatherapi.com/v4/images/weatherapi_logo.png\"\n                alt=\"Weather data by WeatherAPI.com\"\n                border=\"0\"\n              />\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}